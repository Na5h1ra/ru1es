# Modified From https://github.com/Repcz/Tool,https://github.com/Coldvvater/Mononoke and ACL4SSR
[General]

# 增强版 Wi-Fi 助理(iOS)
# 在 Wi-Fi 网络不佳时尝试使用数据网络建立连接，请仅当使用不限量的数据流量时开启，默认关闭：false,开启把false修改为true即可。
wifi-assist = false

# 混合网络 Hybrid Network（建议关闭、无限流量或者超出套餐流量不限速可选择开启）
all-hybrid = false

# Gaming Optimization
//开启后将在系统负载非常高，数据包处理出现延迟时，优先处理 UDP 数据包。
udp-priority = true

# Latency Benchmark
internet-test-url = http://bing.com

# 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204

# 测试超时（秒）
test-timeout = 5

# 自定义 GeoIP 数据库
geoip-maxmind-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb

# GeoIP 禁用自动更新
disable-geoip-db-auto-update = false

# IPv6 支持（默认关闭）
ipv6 = false

# Wi-Fi ACCESS
//Surge 可以作为一个标准的 HTTP/SOCKS5 代理服务器向 wi-Fi 网络下的其他设备提供服务器
allow-wifi-access = true

# Surge iOS - 默认 HTTP 端口号：6152，SOCKS5 端口号：6153
wifi-access-http-port = 6152
wifi-access-socks5-port = 6153

# Surge Mac - 默认 HTTP 端口号：6152，SOCKS5 端口号：6153
http-listen = 0.0.0.0:6152
socks5-listen = 0.0.0.0:6153

# 允许热点共享
allow-hotspot-access = true

# 允许 Surge 请求查看器或 Surge CLI 进行管理控制
//默认仅允许外部控制器通过 USB 进行控制。如果想要允许由 Wi-Fi 控制可以将 127.0.0.1 改为 0.0.0.0
external-controller-access = key@0.0.0.0:6160

# HTTP API & Web Dashboard
//This option allows using HTTP APIs to control
http-api = key@127.0.0.1:6166
//使用 HTTPS 替代 HTTP 协议，需要先配置 MitM 的 CA 证书，同时需要在客户端设备上手动安装并信任 CA 证书
http-api-tls = false
//开启该选项后可以通过浏览器控制 Surge，本机浏览器输入127.0.0.1:6166
http-api-web-dashboard = true

# COMPATIBILITY
//该选项将使得发往这些域名或者 IP 段的请求由 Surge VIF 进行处理（而不是 Surge Proxy)，该选项用于修正和某些应用的兼容性问题
# 兼容模式
#   0：禁用
#   1：Proxy with Loopback Address
#   2：Proxy Only
#   3：VIF Only
#   4：VIF Proxy：不使用 127.0.0.1 的回环地址作为代理，使用 VIF 的虚拟代理地址，将产生额外的性能开销
#   5：不作为默认路由：不声明为默认路由，但声明若干个小路由以覆盖所有地址（与 Surge Mac 增强模式行为相同）
# 这种配置下由于 VIF 不是主网络设备无法配置系统代理。部分应用在该模式下会认为 VPN 未开启以解决特殊兼容性问题，如 HomeKit Security Camera
# 请仅在指引下使用，开启后部分功能可能无法使用
compatibility-mode = 0
# 跳过代理
skip-proxy = 192.168.0.0/24, 10.0.0.0/8, 172.16.0.0/12, 127.0.0.1, localhost, *.local
# 排除简单主机名
exclude-simple-hostnames = true

# DNS
# The IP addresses of upstream DNS servers
dns-server = 223.5.5.5, 223.6.6.6, 114.114.114.114
# 从 /etc/hosts 读取 DNS 记录
read-etc-hosts = true
# ENCRYPTED DNS
//如果配置了加密 DNS，传统 DNS 将仅用作解析 DOH 域名和测试网络连通性
# 支持的协议：
#   DNS over HTTPS: https://doh.pub/dns-query
#   DNS over HTTP/3: h3://example.com
#   DNS over QUIC: quic://example.com
//encrypted-dns-server = https://223.5.5.5/ // 除非当地 ISP 有严重的 DNS 污染问题，否则没必要开启 DoH，传统 DNS 的性能最优，网络异常后恢复速度最快
doh-skip-cert-verification=true // 临时关闭 DOH 的服务端证书验证（解决 Surge 无法与 nextdns.io 完成 TLS 握手问题）
# 代理请求本地 DNS 映射
//开启该选项后，如果访问的域名配置有本地 DNS 映射，surge 将使用本地 IP 地址进行请求，不在远端进行解析。仅对配置了 IP 地址的本地 DNS 映射生效
use-local-host-item-for-proxy = true
# 使加密 DNS 请求通过代理策略执行
encrypted-dns-follow-outbound-mode = false

# ROUTING
# 包含所有网络请求
include-all-networks = false
# 包含本地网络请求
include-local-networks = false

# ADVANCED
# Log Level
loglevel = notify
# 当遇到 REJECT 策略时返回错误页
show-error-page-for-reject = true

# Always Real IP Hosts
#   当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个 Fake IP
#   DNS 数据包将被转发到上游 DNS 服务器
#   例如由于游戏主机会使用 STUN 技术进行 NAT 穿透，需要进行一些额外的配置才能正常工作
always-real-ip = link-ip.nextdns.io, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.logon.battlenet.com.cn, *.logon.battle.net, stun.l.google.com
# Hijack DNS
#   默认情况下，Surge 只对发送到 Surge DNS 地址(198.18.0.2)的 DNS 查询返回 Fack IP 地址。发送到标准 DNS 的查询将被转发
#   如 Google 系智能硬件产品会无视 DHCP 配置强行使用 8.8.8.8 和 8.8.4.4，需要配置 Surge 强行劫持才可以正常工作
hijack-dns = 8.8.8.8:53, 8.8.4.4:53
# TCP Force HTTP Hosts
#   使 Surge 将 TCP 连接视为 HTTP 请求。Surge HTTP 引擎将处理请求，并且所有高级功能都将可用，如截取、重写和脚本
#   支持通配符 * 及 ?；
#   使用前缀 - 排除主机名；
#   默认情况下，只对 80 端口的请求进行处理（使用 example.com:443 指定端口或 example.com:0 表示所有端口）；
#   <ip-address> 表示匹配所有主机名为 IP 地址的连接；
#   <ipv4-address> 表示匹配所有主机名为 IPv4 地址的连接；
#   <ipv6-address> 表示匹配所有主机名为 IPv6 地址的连接。
force-http-engine-hosts = *.ott.cibntv.net
# VIF Excluded Routes
//tun-excluded-routes = 239.255.255.250/32
# VIF Included Routes
//tun-included-routes = 192.168.1.12/32
# 当 Wi-Fi 不是首选网络时 SSID 组策略使用默认策略
use-default-policy-if-wifi-not-primary = false

# 控制当 UDP 流量被匹配到一个不支持 UDP 转发的策略时的行为
#   - DIRECT：回退到 DIRECT 策略（默认）
#   - REJECT：回退到 REJECT 策略
udp-policy-not-supported-behaviour = REJECT

[Replica]
# 抓取流量 => 过滤器 1为开启，0为关闭
# 隐藏 Apple 请求
hide-apple-request = 1
# 隐藏 Crashlytics 请求
hide-crash-reporter-request = 1
# 隐藏 UDP 会话

hide-udp = 1
# 关键词过滤器
//none（关闭关键词过滤器） / whitelist（仅记录包含关键词的请求） / blacklist（仅记录不包含关键词的请求） / pattern（记录匹配通配符的请求）
keyword-filter-type = none
# keyword-filter-type = blacklist
# keyword-filter = icloud, ocsp, logs, analytic, imap, adthor, applovin, appnext, talk, dropbox, github, spys, nexdns, 149.154, 91.108

[Proxy]

[Proxy Group]
机场名 = select, policy-path=Node List类型的订阅链接, no-alert=0, hidden=1, include-all-proxies=1,
✈️ 机场信息 = select, update-interval=86400, policy-regex-filter=流量|剩余|过期|时间|traffic|expire|Traffic|Expire, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名
🗺️ 地区选择 = select,🇭🇰 香港节点,🇨🇳 台湾节点,🇸🇬 新加坡节点,🇯🇵 日本节点,🇺🇲 美国节点,🇰🇷 韩国节点,🌐 其他节点,DIRECT, no-alert=0, hidden=0
📲 电报消息 = select,🇭🇰 香港节点,🇺🇲 美国节点,🗺️ 地区选择, no-alert=0, hidden=0
📹 油管视频 = select,🇭🇰 香港节点,🇺🇲 美国节点,🗺️ 地区选择, no-alert=0, hidden=0
🎵 Spotify = select,🇭🇰 香港节点,🇺🇲 美国节点,DIRECT, no-alert=0, hidden=0
🎈 香港网站 = select,🇭🇰 香港节点,🗺️ 地区选择, no-alert=0, hidden=0
🎫 台湾网站 = select,🇨🇳 台湾节点,🗺️ 地区选择, no-alert=0, hidden=0
🌸 日本网站 = select,🇯🇵 日本节点,🗺️ 地区选择, no-alert=0, hidden=0
🥒 韩国网站 = select,🇰🇷 韩国节点,🗺️ 地区选择, no-alert=0, hidden=0
🦅 美国网站 = select,🇺🇲 美国节点,🗺️ 地区选择, no-alert=0, hidden=0
🌍 国外媒体 = select,🇭🇰 香港节点,🇺🇲 美国节点,🗺️ 地区选择, no-alert=0, hidden=0
🌏 国内媒体 = select,DIRECT,🇭🇰 香港节点,🇨🇳 台湾节点,🗺️ 地区选择, no-alert=0, hidden=0
📢 国外服务 = select,🇭🇰 香港节点,🇺🇲 美国节点,🗺️ 地区选择, no-alert=0, hidden=0
Ⓜ️ 微软服务 = select,DIRECT,🇭🇰 香港节点,🇺🇲 美国节点,🗺️ 地区选择, no-alert=0, hidden=0
🍎 苹果服务 = select,DIRECT,🇺🇲 美国节点,🇯🇵 日本节点,🇭🇰 香港节点,🗺️ 地区选择, no-alert=0, hidden=0
🎮 游戏平台 = select,DIRECT,🇭🇰 香港节点,🇺🇲 美国节点,🇯🇵 日本节点,🗺️ 地区选择, no-alert=0, hidden=0
🎯 全球直连 = select,DIRECT,REJECT, no-alert=0, hidden=0
🛑 广告拦截 = select,REJECT,DIRECT, no-alert=0, hidden=0
🍃 应用净化 = select,REJECT,DIRECT, no-alert=0, hidden=0
🐟 漏网之鱼 = select,🗺️ 地区选择,🇭🇰 香港节点,🇺🇲 美国节点,DIRECT, no-alert=0, hidden=0
🇭🇰 香港节点 = select, update-interval=86400, policy-regex-filter=HK|Hong|hong|香港|深港|沪港|京港|HKT, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名
🇯🇵 日本节点 = select, update-interval=86400, policy-regex-filter=JP|Japan|japan|Tokyo|tokyo|日本|东京|大阪|京日|苏日|沪日|上日|川日|深日|广日|泉日|埼玉, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名
🇺🇲 美国节点 = select, update-interval=86400, policy-regex-filter=美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|纽约|沪美|US|United States|America|america, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名
🇨🇳 台湾节点 = select, update-interval=86400, policy-regex-filter=TW|Taiwan|taiwan|台湾|台北|台中|新北|彰化, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名
🇸🇬 新加坡节点 = select, update-interval=86400, policy-regex-filter=SG|Singapore|singapore|新加坡|狮城|沪新|京新|深新|杭新|广新, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名
🇰🇷 韩国节点 = select, update-interval=86400, policy-regex-filter=KR|Korea|korea|KOR|韩国|首尔|韩|韓|春川, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名
🌐 其他节点 = select, update-interval=86400, policy-regex-filter=俄罗斯|伦敦|迪拜|德国|印度|荷兰|意大利|印尼|菲律宾|西班牙|匈牙利|以色列|乌克兰|摩尔多瓦|巴西|加拿大|南非|土耳其|泰国|澳大利亚|悉尼|马来西亚|越南|阿根廷, no-alert=0, hidden=0, include-all-proxies=0, include-other-group=机场名

# 直接连接
#DIRECT = direct
# 该段定义可用的策略组
# 一个策略组可以包括多个子策略
# 子策略可以是一个代理策略，或者另一个策略组，或者是一个内置策略 (DIRECT 或 REJECT).
#   DIRECT 表示将该请求直接发往目标服务器
#   REJECT 表示拒绝该请求，当连接类型为 HTTP 时，会返回一个错误页面。（该行为可被 show-error-page-for-reject 参数控制）
#   REJECT-TINYGIF 表示拒绝该请求，当连接类型为 HTTP 时，返回一个 1px 的 GIF 图片响应。若为其他类型连接则直接断开。该策略主要用于 Web 广告屏蔽。
#   REJECT-DROP 表示拒绝该请求，与 REJECT 不同的是，该策略将静默抛弃请求。因为部分程序有着十分暴力的重试逻辑，连接失败后会立刻进行重试，导致请求风暴。如果发往某主机名的请求短时间内大量触发 REJECT/REJECT-TINYGIF 策略（当前版本的阈值为 30 秒内 10 次），为了避免产生大量资源浪费，Surge 将自动升级策略为 REJECT-DROP 策略。
#   REJECT-NO-DROP 表示不使用默认的自动丢包逻辑，这样 Surge 每次都会返回 ICMP Port Unreachable，应用会立刻回退而不是等超时。
#   CELLULAR 表示优先使用数据网络；
#   CELLULAR-ONLY 表示仅使用数据网络；
#   HYBRID 表示尝试并发使用 Wi-Fi 和数据网络建立连接，仅当混合网络开关未开启时有意义。
#   NO-HYBRID 表示当 Wi-Fi可用时永不尝试数据网络，仅当混合网络或 i-Fi 助力选项开启时有意义。
# - 新增 IPv4 & IPv6 偏好参数，对于所有策略，可附带参数 ip-version=，可选参数有：
#   * dual：默认行为，在双栈网络上将并发使用 v4 和 v6 地址并选取最快速的结果。
#   * prefer-v4：若DNS解析获得了 A 与 AAAA 记录，优先使用 A 记录，否则使用 AAAA 记录。
#   * prefer-v6：若DNS解析获得了 A 与 AAAA 记录，优先使用 AAAA 记录，否则使用 A 记录。
#   * v4-only：仅使用 A 记录，若未获得A记录则失败。
#   * v6-only：仅使用 AAAA 记录，若未获得 AAAA 记录则失败。
#   可配合 direct 类型策略使用，如：IPV6-ONLY = direct, ip-version=v6-only
#   DIRECT = direct, ip-version=prefer-v4
#   HYBRID = direct, hybrid=true, ip-version=dual


# 有 5 种策略组类型: "select", "url-test", "fallback", "ssid" 和 "load-balance"
# select: 具体哪个子策略将被使用，由用户界面上进行选择。
# url-test: 具体哪个子策略将被使用，通过测试到具体 URL 的访问速度选择延迟最低的策略
#   参数:
#   url: 测试时用到的目标 URL.   
#   interval: 可选, 秒 (默认值: 600s)
#   指定在多长时间后，上次的测试结果将被抛弃。
#   tolerance: 可选, 毫秒 (默认值: 100ms)
#   只有当新的优选线路，比原优选线路的响应时间，大于该值的时候，才会触发线路变更。
#   timeout: 可选, 秒 (默认值: 5s)
#   如果某策略在该时间后依然没有完成，放弃该策略。
# fallback: 与 url-test 组基本一致，区别是只关心子策略是否可用而不关心具体延迟，然后
#   从可用策略中选择靠前的策略。可以通过调小 timeout 参数将缓慢线路也标记为不可用。
#   该类型没有 tolerance 参数。
# ssid: 具体哪个子策略将被使用，根据 Wi-FI 的 SSID、BSSID、路由 IP 地址决定
#   参数:
#   default: 必填
#   默认策略。
#   cellular: 可选
#   在数据网络下的策略。 若不填，那么默认策略将被使用。
# load-balance: 随机从子策略中选取一个策略使用。当配置了 url 参数时，会
#   按照 fallback 组的行为进行可用性检查，然后仅从可用的子策略中随机选取。
#   参数: 
#   除 url、timeout、interval外，还有一个参数：
#   persistent：当 persistent=true 时，对于同一目标主机名，将尽量使用同一个策略。
#   避免因出口 IP 不同而触发目标网站的风险控制。但当可用性改变时可能导致策略变化。




[Rule]
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list,🎯 全球直连, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list,🎯 全球直连, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list,🛑 广告拦截, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list,🍃 应用净化, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/SelfBan.list,🍃 应用净化, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.list,📢 国外服务, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/Outside.list,📢 国外服务, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.list,📢 国外服务, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitLab/GitLab.list,📢 国外服务, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list,📢 国外服务, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list,🎯 全球直连, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/Direct.list,🎯 全球直连, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.list,🎯 全球直连, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.list,Ⓜ️ 微软服务, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.list,🍎 苹果服务, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list,📲 电报消息, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Epic/Epic.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Sony/Sony.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Nintendo/Nintendo.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Blizzard/Blizzard.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EA/EA.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Xbox/Xbox.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Gog/Gog.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Rockstar/Rockstar.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/OutsideGames.list,🎮 游戏平台, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list,📹 油管视频, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.list,🎵 Spotify, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.list,🌏 国内媒体, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/OutsideForceHK.list,🎈 香港网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/OutsideForceTW.list,🎫 台湾网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/DMM/DMM.list,🌸 日本网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.list,🌸 日本网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/OutsideForceJP.list,🌸 日本网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/OutsideForceKR.list,🥒 韩国网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/OutsideForceUS.list,🦅 美国网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/EAlyce/conf/main/Rule/OpenAI.list,🦅 美国网站, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia.list,🌍 国外媒体, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Emby.list,🌍 国外媒体, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/Na5h1ra/ru1es/main/Clash/Ruleset/OutsideMedia.list,🌍 国外媒体, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list,🗺️ 地区选择, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list,🎯 全球直连, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list,🎯 全球直连, update-interval=86400
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list,🎯 全球直连, update-interval=86400
GEOIP,CN,🎯 全球直连
FINAL,🐟 漏网之鱼

[Host]

[URL Rewrite]

# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Header Rewrite]
^https?:\/\/.*\.zhihu\.com\/(question|topic) header-replace User-Agent "osee2unifiedRelease/4432 osee2unifiedReleaseVersion/7.8.0 Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148"

[MITM]
# > VIF 对原始 TCP 流量进行解密
skip-server-cert-verify = true
# > 跳过服务端证书验证
tcp-connection = true
# > MITM over HTTP/2
h2 = true

[Panel]
# flushDNS = script-name=flushDNS,update-interval=-1

[Script]
# Flush DNS, show the DNS delay and server.
# flushDNS = type=generic,timeout=10,script-path=https://raw.githubusercontent.com/zZPiglet/Task/master/asset/flushDNS.js,argument=icon=wand.and.stars.inverse&color=#3d3d5b
